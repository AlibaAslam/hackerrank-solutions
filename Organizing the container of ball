#include <stdio.h>
#include <stdlib.h>
#include <string.h>


int compare(const void *a, const void *b) {
    long long val1 = *(const long long *)a;
    long long val2 = *(const long long *)b;

    if (val1 < val2) {
        return -1;
    } else if (val1 > val2) {
        return 1;
    } else {
        return 0;
    }
}

void solve() {
    int n;
    scanf("%d", &n);

    
    long long container_capacities[n];
    long long ball_type_counts[n];

    memset(container_capacities, 0, sizeof(container_capacities));
    memset(ball_type_counts, 0, sizeof(ball_type_counts));

    int current_ball_count;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &current_ball_count);
            // Add to the capacity of the current container (row sum).
            container_capacities[i] += current_ball_count;
            // Add to the total count of the current ball type (column sum).
            ball_type_counts[j] += current_ball_count;
        }
    }

    qsort(container_capacities, n, sizeof(long long), compare);
    qsort(ball_type_counts, n, sizeof(long long), compare);


    for (int i = 0; i < n; i++) {
        if (container_capacities[i] != ball_type_counts[i]) {
            printf("Impossible\n");
            return; // Exit the function if a mismatch is found.
        }
    }


    printf("Possible\n");
}

int main() {
    int q;
    scanf("%d", &q);
    // Loop through all the queries.
    while (q--) {
        solve();
    }
    return 0;
}
